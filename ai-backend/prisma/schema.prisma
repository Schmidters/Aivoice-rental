// ai-backend/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lead {
  id        Int       @id @default(autoincrement())
  phone     String    @unique
  name      String?   // optional (we can fill later)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  messages  Message[]
  bookings  Booking[]
  // simple many-to-many via LeadProperty
  properties LeadProperty[]
}

model Property {
  id        Int       @id @default(autoincrement())
  slug      String    @unique
  address   String?   // optional extra
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  messages   Message[]
  bookings   Booking[]
  leads      LeadProperty[]
}

model Booking {
  id         Int       @id @default(autoincrement())
  datetime   DateTime
  source     String    // "ai" | "agent" | etc
  createdAt  DateTime  @default(now())

  lead       Lead      @relation(fields: [leadId], references: [id])
  leadId     Int

  property   Property  @relation(fields: [propertyId], references: [id])
  propertyId Int
}

model Message {
  id         Int       @id @default(autoincrement())
  t          DateTime  @default(now()) // timestamp
  role       String    // "user" | "assistant" | "agent"
  content    String
  meta       Json?

  lead       Lead      @relation(fields: [leadId], references: [id])
  leadId     Int

  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId Int?
}

// simple M2M join table
model LeadProperty {
  id         Int      @id @default(autoincrement())
  lead       Lead     @relation(fields: [leadId], references: [id])
  leadId     Int
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int

  @@unique([leadId, propertyId])
}

model Booking {
  id        Int      @id @default(autoincrement())
  phone     String
  property  String
  datetime  DateTime
  source    String   @default("ai")
  createdAt DateTime @default(now())
}