// prisma/schema.prisma
// Version: Ava V6 â€” DB-first (no Redis)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lead {
  id         Int             @id @default(autoincrement())
  phone      String          @unique
  name       String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  messages   Message[]
  bookings   Booking[]
  properties LeadProperty[]
}

model Property {
  id         Int             @id @default(autoincrement())
  slug       String          @unique
  address    String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  // One-to-one relation (no fields/references defined here)
  facts      PropertyFacts?
  messages   Message[]
  bookings   Booking[]
  leads      LeadProperty[]
}

model PropertyFacts {
  id                 Int       @id @default(autoincrement())
  propertyId         Int       @unique
  slug               String    @unique
  address            String?
  buildingName       String?
  buildingType       String?   // Apartment, Townhouse, Condo, etc.
  description        String?   // Marketing summary or detailed description
  leaseType          String?   // "Long Term", "Short Term"
  deposit            String?
  parkingOptions     String?   // "Underground, Outdoor"
  utilitiesIncluded  String?   // "Internet, Heat, Water"
  amenities          Json?     // JSON object: { gym: true, balcony: true, ... }
  images             Json?     // Array of URLs
  units              Json?     // Array of unit objects [{unitName, rent, sqft, bathrooms, bedrooms, availableDate}]
  petsAllowed        Boolean?
  furnished          Boolean?
  notes              String?   // Free-form summary
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  property           Property  @relation(fields: [propertyId], references: [id])
}




model Message {
  id         Int        @id @default(autoincrement())
  role       String
  content    String
  createdAt  DateTime   @default(now())

  leadId     Int
  propertyId Int?
  lead       Lead       @relation(fields: [leadId], references: [id])
  property   Property?  @relation(fields: [propertyId], references: [id])
}

model Booking {
  id          Int        @id @default(autoincrement())
  datetime    DateTime
  source      String?
  createdAt   DateTime   @default(now())

  leadId      Int
  propertyId  Int?
  lead        Lead       @relation(fields: [leadId], references: [id])
  property    Property?  @relation(fields: [propertyId], references: [id])
}

model LeadProperty {
  leadId      Int
  propertyId  Int

  lead        Lead       @relation(fields: [leadId], references: [id])
  property    Property   @relation(fields: [propertyId], references: [id])

  @@id([leadId, propertyId])
}
